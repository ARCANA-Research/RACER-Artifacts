/*
This microkernel convolute K (8-bit 3x3 matrix) with 4096 images,
each image is 8-bit 128x128 matrix

See 8bconv2x2.rc for general setup

*/
/*============================= MAIN PROGRAM =================================*/
/*
  (*) Turn on all 4096 clusters to convolve 4096 images (1 cluster per image)
  (*) Each cluster turns on 22 compute units. This is because:
      With capacity of 64 vectors:
        - 9 vectors store 3x3 Kernel (64 - 9 = 55)
        - 20 vectors store intermediate values (55 - 20 = 35)
        - Each conv output requires 9 conv input, total of 10 (35 / 10 = 3.5)
        -> 3 vectors storing output, each has 64 bits (3 * 64 = 192)
        -> One compute unit can perform 4 MAC16 in parallel (192 * 4 = 768)
        - Each image is 16384 (128x128) bits so need 22 compute unit (16384 / 768 = 21.3)
  (*) The conv output is stored in Z-format order
  (*) The last argument of all compute instruction is a simulated-level argument,
      and it represents an energy multiplicative factor. Because a multiword can
      be broken down into multiple compute engine doing the same thing, the multiplicative
      factor is a quick way to calculate the energy consumption of multiple engines.
      Because all engines operate in parallel, there is not equivalent factor for latency.
*/

//------------------------------Compute unit 0----------------------------------
// TODO Change this to a for loop
SETBULK 0 4096 64
SETBULK 1 4096 64
SETBULK 2 4096 64
SETBULK 3 4096 64
SETBULK 4 4096 64
SETBULK 5 4096 64
SETBULK 6 4096 64
SETBULK 7 4096 64
SETBULK 8 4096 64
SETBULK 9 4096 64
SETBULK 10 4096 64
SETBULK 11 4096 64
SETBULK 12 4096 64
SETBULK 13 4096 64
SETBULK 14 4096 64
SETBULK 15 4096 64
SETBULK 16 4096 64
SETBULK 17 4096 64
SETBULK 18 4096 64
SETBULK 19 4096 64
SETBULK 20 4096 64
SETBULK 21 4096 64

//18 <- 17 16 15 14 13 12 11 10 9
MAC16 h0v18 b0v9 b0v0 4
MAC16 h0v18 b0v10 b0v1 4
MAC16 h0v18 b0v11 b0v2 4
MAC16 h0v18 b0v12 b0v3 4
MAC16 h0v18 b0v13 b0v4 4
MAC16 h0v18 b0v14 b0v5 4
MAC16 h0v18 b0v15 b0v6 4
MAC16 h0v18 b0v16 b0v7 4
MAC16 h0v18 b0v17 b0v8 4

//28 <- 27 26 25 24 23 22 21 20 19
MAC16 h0v28 b0v19 b0v0 4
MAC16 h0v28 b0v20 b0v1 4
MAC16 h0v28 b0v21 b0v2 4
MAC16 h0v28 b0v22 b0v3 4
MAC16 h0v28 b0v23 b0v4 4
MAC16 h0v28 b0v24 b0v5 4
MAC16 h0v28 b0v25 b0v6 4
MAC16 h0v28 b0v26 b0v7 4
MAC16 h0v28 b0v27 b0v8 4

//38 <- 37 36 35 34 33 32 31 30 29
MAC16 h0v38 b0v29 b0v0 4
MAC16 h0v38 b0v30 b0v1 4
MAC16 h0v38 b0v31 b0v2 4
MAC16 h0v38 b0v32 b0v3 4
MAC16 h0v38 b0v33 b0v4 4
MAC16 h0v38 b0v34 b0v5 4
MAC16 h0v38 b0v35 b0v6 4
MAC16 h0v38 b0v36 b0v7 4
MAC16 h0v38 b0v37 b0v8 4

UNSETALL
